name: Build Android app

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Java
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: "gradle"

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Run Yarn Install
        run: |
          yarn install

      - name: Build application
        run: |
          cd ./android &&
          ./gradlew assembleRelease
          
      - name: Move APK to Release
        run: mv android/app/build/outputs/apk/release/app-release.apk $GITHUB_WORKSPACE/app-release.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_HUB_RELEASE}}
        with:
          tag_name: v1.0
          release_name: Release v1.0
          draft: false
          prerelease: false

      - name: Upload APK as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_HUB_RELEASE }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Get APK Download URL
        id: get_release
        run: |
          echo "::set-output name=download_url::$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets | jq -r '.[] | select(.name == \"app-release.apk\") | .url')"
